---
- name: Extract tcdb bundle
  unarchive:
    src: tcdb.tgz
    dest: "/home/oracle"
- name: Execute tcdb.sh
  shell: |
    export ORACLE_BASE={{ oracle_base }}
    export ORACLE_HOME={{ oracle_home }}
    ./tcdb.sh 2>/tmp/stderr.err >/tmp/stdout.out &
    sleep 30
    while true
    do 
      c=$(ps -ef | grep -v grep | grep [t]cdb.sh | wc -l)
      [ $c -eq 0 ] && break
      sleep 10
    done
  args:
    executable: /bin/bash
    chdir: /home/oracle/tcdb
    creates: /u01/app/oracle/oradata/tcdb/users01.dbf
- name: Add /etc/oratab entry
  lineinfile:
    path: /etc/oratab
    regexp: '^tcdb'
    line: 'tcdb:/u01/app/oracle/product/12.2.0.1/ora_1:Y'
  become_user: root
- name: Add to DE as devdb
  lineinfile:
    path: /home/centos/conf.txt
    regexp: '^environment_address'
    line: 'environment_address=devdb'
  become_user: root
- name: Add a restart dbora if not running to cron 
  cron:
    name: "Enroll into Delphix on boot"
    special_time: reboot
    job: "if [[ ! $(pgrep 'ora_.*_.*cdb') ]]; then echo \"starting oracle\" > /tmp/db.log; sudo -i -u oracle dbstart &>> /tmp/db.log; fi; pgrep _patcdb &>> /tmp/db.log"
  become: no
  tags:
    - cron
- name: Creates the reboot crontab for self_enroll 
  cron:
    name: "Enroll into Delphix on boot"
    special_time: reboot
    job: "until [[ \"$RESULT\" == \"yes\" ]] ; do RESULT=$(curl jumpbox:8181 2>/dev/null| jq -r '.environments.ready');echo waiting for ready &>>/tmp/enroll.log; sleep 10; done; sudo /home/{{ ansible_user }}/self_enroll -c conf.txt &>> /tmp/enroll.log"
  become: no
  tags:
    - cron